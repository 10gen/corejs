<%
core.ext.getlist();
head.addCSS("NOCDN/@@/yui/current/container/assets/skins/sam/container.css");
head.addCSS("NOCDN/@@/yui/current/button/assets/skins/sam/button.css");
head.push('<script type="text/javascript" src="/@@/yui/current/yahoo-dom-event/yahoo-dom-event.js"></script>');
head.push('<script type="text/javascript" src="/@@/yui/current/dragdrop/dragdrop-min.js"></script>');
head.push('<script type="text/javascript" src="/@@/yui/current/element/element-beta-min.js"></script>');
head.push('<script type="text/javascript" src="/@@/yui/current/button/button-min.js"></script>');
head.push('<script type="text/javascript" src="/@@/yui/current/container/container-min.js"></script>');

core.util.diff();

var id = request.id;

var newPost = true;
var thePost = new Post();
thePost.cls = request.cls || "entry";
thePost.author = user.name;
var origPost;

if (id) {
    foundPost = db.blog.posts.findOne( CrID( id ) );
    if (foundPost) {
        thePost = foundPost;
        newPost = false;
        origPost = Object.extend({}, thePost);
    } else {
        foundPost = db.blog.drafts.findOne( { _id : ObjId(id) } );
        if (foundPost) {
            thePost = foundPost;
            newPost = true; // We don't support deleting drafts, even of existing posts
        }
    }
}

/*if(request.draft_id) {
  db.blog.drafts.remove({ post_id: ObjId(request.draft_id) });
}
*/

var justSaved = false;

Blog.extraFields = allowModule.blog.extraFields;

if ( request.action == "save" ) {

    thePost.cls = request.cls || "entry";

    if( !request.title ||
        request.title.trim().length == 0 ||
        request.content.trim().length == 0 ) {
      	print("<p>Error saving: name/content is blank?<p>");
    }
    else {

        if ( ! thePost.name || ( request.name && ! thePost.live ) ) {

	    if ( thePost.cls == "entry" ){
		if ( request.name.match( /^.?\d\d\d\d\/\d\d?\// ) )
		    thePost.name = request.name;
    		else
		    thePost.name = thePost.ts.getFullYear() + "/" + (thePost.ts.getMonth()+1) + "/" + request.name;
	    }
	    else {
		thePost.name = request.name;
	    }
    	}

        thePost.title = request.title;
        thePost.content = request.content;
        thePost.excerpt = request.excerpt;
        thePost.ts = new Date( request.ts );
        if ( request.author )
            thePost.author = request.author;

        thePost.categories = request.getParameters('categories') || [];

	if (request.new_categories) {
	    request.new_categories.split(/[,]/).forEach( function( newName ){
		newName = newName.trim();
		if ( newName.length == 0 )
		    return;

		var found = false;
		thePost.categories.forEach( function( old ){
		    if ( old.toLowerCase() == newName.toLowerCase() )
			found = true;
		} );
		if ( found )
		    return;

		var cat = Category.find( newName );
		if ( ! cat ){
		    cat = new Category( newName , newName );
		    db.blog.categories.save( cat );
		}
		thePost.categories.push( cat.name );
	    } );
	}

	thePost.categories = thePost.categories.unique().sort();

        thePost.live = parseBool( request.live );
        thePost.dontSearch = parseBool( request.dontSearch );
        thePost.commentsEnabled = parseBool(request.commentsEnabled);
        thePost.suppressImage = parseBool( request.suppressImage );

	if ( Blog.extraFields ){
	    for ( var extraFieldName in Blog.extraFields ){
		var extraVal = request[ "extra_" + extraFieldName ];
		var extraConfig = Blog.extraFields[extraFieldName];
		log( "extraConfig : " + tojson( extraConfig ) );
		if ( extraConfig.parseFunction ){
		    log( "parsing" );
		    extraVal = extraConfig.parseFunction( extraVal );
		}
		thePost[ extraFieldName ] = extraVal;
	    }
	}

        if(origPost) {
            log.blog("Post changed by "+(user ? user.name : "(unknown)")+", diff: "+tojson(Util.Diff.diffObj(thePost, origPost)));
        }
        else {
            log.blog("Saved new post: "+tojson(thePost));
        }


        db.blog.drafts.remove({ _id : ObjId(id) }); // in case this is a draft
        if(thePost.post_id) delete thePost.post_id; // in case this is a draft
        db.blog.posts.save( thePost );
        newPost = false; // in case we're saving something for the first time

        id = thePost._id;
        justSaved=true;
        print( "<i>Saved.</i>" );

        if ( request.getHost().match( /www/ ) && thePost.live && ! thePost.haveIPinged ){
            // ping blogging services
            print( "Pinging Services<br>" );
            if ( request.getHost().match( /^www\./ ) && allowModule.blog.ping && thePost.live && request.getHost().match( /^www\./ ) ){
                Blog.ping(siteUrl + '/' + thePost.name);
            }
            thePost.haveIPinged = true;
        }
    }
}
else if (request.action == 'delete') {
    log('Post titled "'+thePost.title+'" deleted by '+user.name);
    if (db.blog.posts.remove({_id: thePost._id})) {
        response.setResponseCode( 302 );
        response.setHeader( "Location" , "posts" );
    }
    else {
        print("<strong>Error deleting post!</strong>");
    }
}

if ( request.content ) thePost.content = request.content;

var categories = db.blog.categories.find().sort( { name : 1 } ).toArray( 100000 );
categories.sort( function( a , b ){

    var hasA = thePost.categories.contains( a.name );
    var hasB = thePost.categories.contains( b.name );

    if ( hasA && ! hasB )
	return -1;

    if ( hasB && ! hasA )
	return 1;

    var aL = a.getLabel();
    var bL = b.getLabel();
    return aL.toLowerCase().compareTo( bL.toLowerCase() );
} );


var buttons = function(){ %>
<div id="post_action">
  <input type="submit" value="Save">
  <input type="button" value="Preview" onclick="preview('preview')" />
  <% if (!newPost) { %><input type="button" value="Delete" id="delete" onclick="confirmDelete();"> <% } %>
</div>
<% 
};

%>

<script type="text/javascript" src="NOCDN/@@/tinymce/current/tiny_mce.js"></script>
<script language="javascript" type="text/javascript">
tinyMCE.init({
	mode : "exact",
	elements : "content",
	width: "645",
	height: "500",
	theme : "advanced",
	plugins : "table,save,advhr,advlink,advimage,emotions,iespell,insertdatetime,preview,searchreplace,print,contextmenu,bramus_cssextras",
	theme_advanced_buttons2_add: "separator,forecolor,backcolor",
	theme_advanced_buttons2_add_before: "cut,copy,paste,separator,search,replace,separator",
	theme_advanced_buttons3_add_before : "tablecontrols,separator",
	theme_advanced_toolbar_location : "top",
	theme_advanced_toolbar_align : "left",
	theme_advanced_path_location : "bottom",
	plugin_insertdate_dateFormat : "%Y-%m-%d",
	plugin_insertdate_timeFormat : "%H:%M:%S",
	extended_valid_elements : "a[name|href|target|title|onclick],img[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name|style],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style],script[src|type],iframe[width|height|frameborder|src|]",
	external_image_list_url : "/admin/_imageList.jxp",
	theme_advanced_buttons1_add : "separator,bramus_cssextras_classes,bramus_cssextras_ids",
	convert_urls : false ,
	content_css : "/~~/blog/assets/blog_post.css"
});
</script>

<script language="javascript" type="text/javascript">

function confirmExit() {
    if(needs_save) {
        if(confirm("Would you like to save your draft before exiting?")) {
            autosave();
        }
    }
}

  window.onbeforeunload = confirmExit;

  var newPost = <%= id ? "false" : "true" %>;
  function titleChange(){
//    if ( ! newPost ) return;

    var t = document.getElementById( "title" ).value;
      t = t.replace( /[^a-zA-Z0-9]+/g , <%= tojson(Ext.getlist(allowModule, 'blog', 'slugReplaceChar') || '-') %> ).toLowerCase();
    document.getElementById( "name" ).value = t;
  };

  function confirmDelete() {
      var confirmed = window.confirm('Are you sure you want to delete this post? You cannot undelete!');
      needs_save = false;

      if (confirmed) {
          document.getElementById("form_action").value = 'delete';
          document.editForm.submit();
      }
  };
</script>


<h1>
<%
  if( newPost && !justSaved )
    print( thePost.cls == "page" ? "New Page" : "New Post" );
  else
    print( "Edit " + (thePost.cls == "page" ? "Page" : "Post") );
%>
&nbsp;<span style="font-size: 14px; color: grey;" id="autosave_ts"></span>
</h1>

<form method="post" action="post_edit.jxp" name="editForm" onsubmit="needs_save = false; return true;">
    <input type="hidden" name="action" value="save" id="form_action">
    <input type="hidden" name="cls" value="<%= thePost.cls %>">
    <div id="post_form">
      <% buttons(); %>
    <div id="post_title"><input id="title" name="title" value='<%= (thePost.title ? thePost.title.replace( /'/g , "&apos;" ) :  "" ) %>' size="60" onChange="titleChange()" onKeyUp="titleChange(); needs_save = true;" ></div>
    <div id="post_body"><textarea id="content" onkeypress="needs_save = true;" name="content"><%= thePost.content %></textarea></div>
    <div id="post_meta">
        <h2>Post Meta</h2>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Excerpt</div>
            <div class="post_meta_field_value">
              <textarea id="excerpt" name="excerpt" onkeypress="needs_save = true;"><%= thePost.excerpt || "" %></textarea>
              <input type="button" value="Preview Excerpt" onclick="preview('previewExcerpt')" />
            </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Status</div>
            <div class="post_meta_field_value">
                <select name="live" id="live" onchange="needs_save = true;">
                    <option value="false">Not Live</option>
                    <option value="true" <%= thePost.live ? "selected" : "" %> >Live</option>
                </select>
            </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Exclude from Search Results?</div>
            <div class="post_meta_field_value">
                <select name="dontsearch" id="dontsearch">
                    <option value="false">No</option>
                    <option value="true" <%= thePost.dontSearch ? "selected" : "" %> >Yes</option>
                </select>
            </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Comments</div>
            <div class="post_meta_field_value">
                <select name="commentsEnabled" onchange="needs_save = true;" id="commentsEnabled">
                    <option value="false">Disabled</option>
                    <option value="true" <%= thePost.commentsEnabled ? "selected" : "" %> >Enabled</option>
                </select>
            </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Slug</div>
            <div class="post_meta_field_value">
	      <input id="name" size="39" onkeypress="needs_save = true;" name="name" value="<%= thePost.name || "" %>"   <%= thePost.live ? "disabled" : "" %> >
	    </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Author</div>
            <div class="post_meta_field_value">
                <select name="author" onchange="needs_save = true;">
                  <%
// FIXME: Combine this with code in ~~/modules/admin/user.jxp
var allRoles = admin.getRoles('/blog/post_edit');
var allUsers = {};

allRoles.forEach(function(z){
    var cursor = db.users.find( {permissions : z.name} );
    cursor.forEach( function(author) {
        if(allUsers[author.name]) return;
        allUsers[author.name] = true;
    %>
                        <option value="<%= author.name %>" <%= thePost.author == author.name ? "selected" : "fdsa" %>><%= author.name %></option>
<%  });
});
%>

                </select>
            </div>
        </div>
        <div class="post_meta_field">
            <div class="post_meta_field_name">Categories</div>
            <div class="post_meta_field_value ">
                <input id="new_categories" onkeypress="needs_save = true;" name="new_categories" size="35" /><br/>
                <div class="scrollable">
                <%
                    categories.forEach( function(category) {
                %>
                    <input type="checkbox" onclick="needs_save = true;" name="categories" value="<%= category.name %>"
		        <%= thePost.categories.contains(category.name) ? 'checked' : '' %> >
			<%= category.getLabel() %>
		    <br/>
                <% }); %>
                </div>
            </div>
        </div>

	<if Blog.extraFields >
	  <forin extraFieldName Blog.extraFields >

	     <div class="post_meta_field">
                <div class="post_meta_field_name"><%= Blog.extraFields[ extraFieldName ].niceName || extraFieldName %></div>
                <div class="post_meta_field_value"><input name="extra_<%= extraFieldName %>" size="30" value="<%= thePost[ extraFieldName ] || "" %>"/></div>
	     </div>

	  </forin>
	</if>

        <div class="post_meta_field">
            <div class="post_meta_field_name">Publish Date</div>
            <div class="post_meta_field_value"><input name="ts" onkeypress="needs_save = true;" size="30" value="<%= thePost.ts.simpleFormat() %>"/></div>
        </div>

        <div class="post_meta_field">
            <div class="post_meta_field_name">Suppress Image</div>
            <div class="post_meta_field_value"><input type="checkbox" onclick="needs_save = true;" id="suppressImage" name="suppressImage" value="true" <%= thePost.suppressImage ? "checked" : ""  %> ></div>
        </div>

        <div class="post_meta_field">
            <div class="post_meta_field_name">ID</div>
            <div class="post_meta_field_value">
                <% if ( id ) { %>
                    <%= id %>
                    <input type="hidden" name="id" value="<%= id %>">
                <% } %>
                <input type="hidden" id="draft_id" name="draft_id" />
            </div>
        </div>
        <% buttons(); %>
    </div>
    </div>
</form>

<script type="text/javascript">


var id<%= id ? ' = "'+id+'"' : '' %>;
var saved = false;
var needs_save = false;

//autosave every 60 seconds
function autosave() {
    var cat = document.getElementsByName("categories");
    var categories = [];
    for(var i in cat) {
        if(cat[i].checked)
            categories.push("categories="+cat[i].value);
    }

    categories = categories.join("&");
    ajax((id ? "id="+id+"&" : "") +
         "title="+document.getElementById("title").value+
         "&name="+encodeURIComponent(document.getElementById("name").value)+
         "&content="+encodeURIComponent(tinyMCE.activeEditor.getContent())+
         "&excerpt="+encodeURIComponent(document.getElementById("excerpt").value)+
         "&live="+document.getElementById("live").value+
         "&commentsEnabled="+document.getElementById("commentsEnabled").value+
         "&suppressImage="+document.getElementById("suppressImage").checked+
         "&new_categories="+document.getElementById("new_categories").value+
         "&"+categories, "autosave", function(response) {
        id = response;
        var now = new Date();
        if(!response.match(/\S+/) || response.match(/\S+/)[0].length != 24){
            document.getElementById("autosave_ts").innerHTML = "<span class='error'>Autosaving FAILED at "+ now.toString() + "</div>";
            return;
        }
        document.getElementById("autosave_ts").innerHTML = "Draft autosaved at "+now.toString();
        document.getElementById("draft_id").value = id;
        saved = true;
        needs_save = false;
    });
    setTimeout(autosave, 60000);
}

setTimeout(autosave, 60000);

var firstSave = true;
function preview(path) {
    // we have to wait until the async save is complete
    if( !saved ) {
        if( firstSave ) autosave();
        firstSave = false;
        setTimeout('preview("'+path+'")', 1000);
    }
    else {
        window.open('<%=routes.find(Blog.routes) ? routes.find(Blog.routes) : "" %>/'+path+'?id='+id, '_blank');
        firstSave = true;
        saved = false;
    }
}
//'

</script>

<div id="myMarkedUpContainer" class="yui-skin-sam">
</div>

<% return thePost; %>
